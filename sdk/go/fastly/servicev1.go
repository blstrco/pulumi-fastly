// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fastly

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Fastly Service, representing the configuration for a website, app,
// API, or anything else to be served through Fastly. A Service encompasses Domains
// and Backends.
//
// The Service resource requires a domain name that is correctly set up to direct
// traffic to the Fastly service. See Fastly's guide on [Adding CNAME Records][fastly-cname]
// on their documentation site for guidance.
type Servicev1 struct {
	pulumi.CustomResourceState

	// A set of ACL configuration blocks.  Defined below.
	Acls Servicev1AclArrayOutput `pulumi:"acls"`
	// Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.
	Activate pulumi.BoolPtrOutput `pulumi:"activate"`
	// The currently active version of your Fastly Service.
	ActiveVersion pulumi.IntOutput `pulumi:"activeVersion"`
	// A set of Backends to service requests from your Domains.
	// Defined below. Backends must be defined in this argument, or defined in the
	// `vcl` argument below
	Backends Servicev1BackendArrayOutput `pulumi:"backends"`
	// A BigQuery endpoint to send streaming logs too.
	// Defined below.
	Bigqueryloggings Servicev1BigqueryloggingArrayOutput `pulumi:"bigqueryloggings"`
	// An Azure Blob Storage endpoint to send streaming logs too.
	// Defined below.
	Blobstorageloggings Servicev1BlobstorageloggingArrayOutput `pulumi:"blobstorageloggings"`
	// A set of Cache Settings, allowing you to override
	CacheSettings Servicev1CacheSettingArrayOutput `pulumi:"cacheSettings"`
	ClonedVersion pulumi.IntOutput                 `pulumi:"clonedVersion"`
	// An optional comment about the Director.
	Comment pulumi.StringPtrOutput `pulumi:"comment"`
	// A set of conditions to add logic to any basic
	// configuration object in this service. Defined below.
	Conditions Servicev1ConditionArrayOutput `pulumi:"conditions"`
	// Sets the host header.
	DefaultHost pulumi.StringOutput `pulumi:"defaultHost"`
	// The default Time-to-live (TTL) for
	// requests.
	DefaultTtl pulumi.IntPtrOutput `pulumi:"defaultTtl"`
	// A set of dictionaries that allow the storing of key values pair for use within VCL functions. Defined below.
	Dictionaries Servicev1DictionaryArrayOutput `pulumi:"dictionaries"`
	// A director to allow more control over balancing traffic over backends.
	// when an item is not to be cached based on an above `condition`. Defined below
	Directors Servicev1DirectorArrayOutput `pulumi:"directors"`
	// If you created the S3 bucket outside of `us-east-1`,
	// then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`.
	Domains Servicev1DomainArrayOutput `pulumi:"domains"`
	// A set of custom, "dynamic" VCL Snippet configuration blocks.  Defined below.
	Dynamicsnippets Servicev1DynamicsnippetArrayOutput `pulumi:"dynamicsnippets"`
	// Services that are active cannot be destroyed. In
	// order to destroy the Service, set `forceDestroy` to `true`. Default `false`.
	ForceDestroy pulumi.BoolPtrOutput `pulumi:"forceDestroy"`
	// A gcs endpoint to send streaming logs too.
	// Defined below.
	Gcsloggings Servicev1GcsloggingArrayOutput `pulumi:"gcsloggings"`
	// A set of gzip rules to control automatic gzipping of
	// content. Defined below.
	Gzips Servicev1GzipArrayOutput `pulumi:"gzips"`
	// A set of Headers to manipulate for each request. Defined
	// below.
	Headers Servicev1HeaderArrayOutput `pulumi:"headers"`
	// Name of a defined `healthcheck` to assign to this backend.
	Healthchecks Servicev1HealthcheckArrayOutput `pulumi:"healthchecks"`
	// An HTTPS endpoint to send streaming logs to.
	// Defined below.
	Httpsloggings Servicev1HttpsloggingArrayOutput `pulumi:"httpsloggings"`
	// A logentries endpoint to send streaming logs too.
	// Defined below.
	Logentries Servicev1LogentryArrayOutput `pulumi:"logentries"`
	// A unique name to identify this dictionary.
	Name pulumi.StringOutput `pulumi:"name"`
	// A Papertrail endpoint to send streaming logs too.
	// Defined below.
	Papertrails Servicev1PapertrailArrayOutput `pulumi:"papertrails"`
	// A set of Request modifiers. Defined below
	RequestSettings Servicev1RequestSettingArrayOutput `pulumi:"requestSettings"`
	// Allows you to create synthetic responses that exist entirely on the varnish machine. Useful for creating error or maintenance pages that exists outside the scope of your datacenter. Best when used with Condition objects.
	ResponseObjects Servicev1ResponseObjectArrayOutput `pulumi:"responseObjects"`
	// A set of S3 Buckets to send streaming logs too.
	// Defined below.
	S3loggings Servicev1S3loggingArrayOutput `pulumi:"s3loggings"`
	// A set of custom, "regular" (non-dynamic) VCL Snippet configuration blocks.  Defined below.
	Snippets Servicev1SnippetArrayOutput `pulumi:"snippets"`
	// A Splunk endpoint to send streaming logs too.
	// Defined below.
	Splunks Servicev1SplunkArrayOutput `pulumi:"splunks"`
	// A Sumologic endpoint to send streaming logs too.
	// Defined below.
	Sumologics Servicev1SumologicArrayOutput `pulumi:"sumologics"`
	// A syslog endpoint to send streaming logs too.
	// Defined below.
	Syslogs Servicev1SyslogArrayOutput `pulumi:"syslogs"`
	// A set of custom VCL configuration blocks. The
	// ability to upload custom VCL code is not enabled by default for new Fastly
	// accounts (see the [Fastly documentation](https://docs.fastly.com/guides/vcl/uploading-custom-vcl) for details).
	Vcls Servicev1VclArrayOutput `pulumi:"vcls"`
	// Description field for the version.
	VersionComment pulumi.StringPtrOutput `pulumi:"versionComment"`
}

// NewServicev1 registers a new resource with the given unique name, arguments, and options.
func NewServicev1(ctx *pulumi.Context,
	name string, args *Servicev1Args, opts ...pulumi.ResourceOption) (*Servicev1, error) {
	if args == nil || args.Domains == nil {
		return nil, errors.New("missing required argument 'Domains'")
	}
	if args == nil {
		args = &Servicev1Args{}
	}
	var resource Servicev1
	err := ctx.RegisterResource("fastly:index/servicev1:Servicev1", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicev1 gets an existing Servicev1 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicev1(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Servicev1State, opts ...pulumi.ResourceOption) (*Servicev1, error) {
	var resource Servicev1
	err := ctx.ReadResource("fastly:index/servicev1:Servicev1", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Servicev1 resources.
type servicev1State struct {
	// A set of ACL configuration blocks.  Defined below.
	Acls []Servicev1Acl `pulumi:"acls"`
	// Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.
	Activate *bool `pulumi:"activate"`
	// The currently active version of your Fastly Service.
	ActiveVersion *int `pulumi:"activeVersion"`
	// A set of Backends to service requests from your Domains.
	// Defined below. Backends must be defined in this argument, or defined in the
	// `vcl` argument below
	Backends []Servicev1Backend `pulumi:"backends"`
	// A BigQuery endpoint to send streaming logs too.
	// Defined below.
	Bigqueryloggings []Servicev1Bigquerylogging `pulumi:"bigqueryloggings"`
	// An Azure Blob Storage endpoint to send streaming logs too.
	// Defined below.
	Blobstorageloggings []Servicev1Blobstoragelogging `pulumi:"blobstorageloggings"`
	// A set of Cache Settings, allowing you to override
	CacheSettings []Servicev1CacheSetting `pulumi:"cacheSettings"`
	ClonedVersion *int                    `pulumi:"clonedVersion"`
	// An optional comment about the Director.
	Comment *string `pulumi:"comment"`
	// A set of conditions to add logic to any basic
	// configuration object in this service. Defined below.
	Conditions []Servicev1Condition `pulumi:"conditions"`
	// Sets the host header.
	DefaultHost *string `pulumi:"defaultHost"`
	// The default Time-to-live (TTL) for
	// requests.
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A set of dictionaries that allow the storing of key values pair for use within VCL functions. Defined below.
	Dictionaries []Servicev1Dictionary `pulumi:"dictionaries"`
	// A director to allow more control over balancing traffic over backends.
	// when an item is not to be cached based on an above `condition`. Defined below
	Directors []Servicev1Director `pulumi:"directors"`
	// If you created the S3 bucket outside of `us-east-1`,
	// then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`.
	Domains []Servicev1Domain `pulumi:"domains"`
	// A set of custom, "dynamic" VCL Snippet configuration blocks.  Defined below.
	Dynamicsnippets []Servicev1Dynamicsnippet `pulumi:"dynamicsnippets"`
	// Services that are active cannot be destroyed. In
	// order to destroy the Service, set `forceDestroy` to `true`. Default `false`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// A gcs endpoint to send streaming logs too.
	// Defined below.
	Gcsloggings []Servicev1Gcslogging `pulumi:"gcsloggings"`
	// A set of gzip rules to control automatic gzipping of
	// content. Defined below.
	Gzips []Servicev1Gzip `pulumi:"gzips"`
	// A set of Headers to manipulate for each request. Defined
	// below.
	Headers []Servicev1Header `pulumi:"headers"`
	// Name of a defined `healthcheck` to assign to this backend.
	Healthchecks []Servicev1Healthcheck `pulumi:"healthchecks"`
	// An HTTPS endpoint to send streaming logs to.
	// Defined below.
	Httpsloggings []Servicev1Httpslogging `pulumi:"httpsloggings"`
	// A logentries endpoint to send streaming logs too.
	// Defined below.
	Logentries []Servicev1Logentry `pulumi:"logentries"`
	// A unique name to identify this dictionary.
	Name *string `pulumi:"name"`
	// A Papertrail endpoint to send streaming logs too.
	// Defined below.
	Papertrails []Servicev1Papertrail `pulumi:"papertrails"`
	// A set of Request modifiers. Defined below
	RequestSettings []Servicev1RequestSetting `pulumi:"requestSettings"`
	// Allows you to create synthetic responses that exist entirely on the varnish machine. Useful for creating error or maintenance pages that exists outside the scope of your datacenter. Best when used with Condition objects.
	ResponseObjects []Servicev1ResponseObject `pulumi:"responseObjects"`
	// A set of S3 Buckets to send streaming logs too.
	// Defined below.
	S3loggings []Servicev1S3logging `pulumi:"s3loggings"`
	// A set of custom, "regular" (non-dynamic) VCL Snippet configuration blocks.  Defined below.
	Snippets []Servicev1Snippet `pulumi:"snippets"`
	// A Splunk endpoint to send streaming logs too.
	// Defined below.
	Splunks []Servicev1Splunk `pulumi:"splunks"`
	// A Sumologic endpoint to send streaming logs too.
	// Defined below.
	Sumologics []Servicev1Sumologic `pulumi:"sumologics"`
	// A syslog endpoint to send streaming logs too.
	// Defined below.
	Syslogs []Servicev1Syslog `pulumi:"syslogs"`
	// A set of custom VCL configuration blocks. The
	// ability to upload custom VCL code is not enabled by default for new Fastly
	// accounts (see the [Fastly documentation](https://docs.fastly.com/guides/vcl/uploading-custom-vcl) for details).
	Vcls []Servicev1Vcl `pulumi:"vcls"`
	// Description field for the version.
	VersionComment *string `pulumi:"versionComment"`
}

type Servicev1State struct {
	// A set of ACL configuration blocks.  Defined below.
	Acls Servicev1AclArrayInput
	// Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.
	Activate pulumi.BoolPtrInput
	// The currently active version of your Fastly Service.
	ActiveVersion pulumi.IntPtrInput
	// A set of Backends to service requests from your Domains.
	// Defined below. Backends must be defined in this argument, or defined in the
	// `vcl` argument below
	Backends Servicev1BackendArrayInput
	// A BigQuery endpoint to send streaming logs too.
	// Defined below.
	Bigqueryloggings Servicev1BigqueryloggingArrayInput
	// An Azure Blob Storage endpoint to send streaming logs too.
	// Defined below.
	Blobstorageloggings Servicev1BlobstorageloggingArrayInput
	// A set of Cache Settings, allowing you to override
	CacheSettings Servicev1CacheSettingArrayInput
	ClonedVersion pulumi.IntPtrInput
	// An optional comment about the Director.
	Comment pulumi.StringPtrInput
	// A set of conditions to add logic to any basic
	// configuration object in this service. Defined below.
	Conditions Servicev1ConditionArrayInput
	// Sets the host header.
	DefaultHost pulumi.StringPtrInput
	// The default Time-to-live (TTL) for
	// requests.
	DefaultTtl pulumi.IntPtrInput
	// A set of dictionaries that allow the storing of key values pair for use within VCL functions. Defined below.
	Dictionaries Servicev1DictionaryArrayInput
	// A director to allow more control over balancing traffic over backends.
	// when an item is not to be cached based on an above `condition`. Defined below
	Directors Servicev1DirectorArrayInput
	// If you created the S3 bucket outside of `us-east-1`,
	// then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`.
	Domains Servicev1DomainArrayInput
	// A set of custom, "dynamic" VCL Snippet configuration blocks.  Defined below.
	Dynamicsnippets Servicev1DynamicsnippetArrayInput
	// Services that are active cannot be destroyed. In
	// order to destroy the Service, set `forceDestroy` to `true`. Default `false`.
	ForceDestroy pulumi.BoolPtrInput
	// A gcs endpoint to send streaming logs too.
	// Defined below.
	Gcsloggings Servicev1GcsloggingArrayInput
	// A set of gzip rules to control automatic gzipping of
	// content. Defined below.
	Gzips Servicev1GzipArrayInput
	// A set of Headers to manipulate for each request. Defined
	// below.
	Headers Servicev1HeaderArrayInput
	// Name of a defined `healthcheck` to assign to this backend.
	Healthchecks Servicev1HealthcheckArrayInput
	// An HTTPS endpoint to send streaming logs to.
	// Defined below.
	Httpsloggings Servicev1HttpsloggingArrayInput
	// A logentries endpoint to send streaming logs too.
	// Defined below.
	Logentries Servicev1LogentryArrayInput
	// A unique name to identify this dictionary.
	Name pulumi.StringPtrInput
	// A Papertrail endpoint to send streaming logs too.
	// Defined below.
	Papertrails Servicev1PapertrailArrayInput
	// A set of Request modifiers. Defined below
	RequestSettings Servicev1RequestSettingArrayInput
	// Allows you to create synthetic responses that exist entirely on the varnish machine. Useful for creating error or maintenance pages that exists outside the scope of your datacenter. Best when used with Condition objects.
	ResponseObjects Servicev1ResponseObjectArrayInput
	// A set of S3 Buckets to send streaming logs too.
	// Defined below.
	S3loggings Servicev1S3loggingArrayInput
	// A set of custom, "regular" (non-dynamic) VCL Snippet configuration blocks.  Defined below.
	Snippets Servicev1SnippetArrayInput
	// A Splunk endpoint to send streaming logs too.
	// Defined below.
	Splunks Servicev1SplunkArrayInput
	// A Sumologic endpoint to send streaming logs too.
	// Defined below.
	Sumologics Servicev1SumologicArrayInput
	// A syslog endpoint to send streaming logs too.
	// Defined below.
	Syslogs Servicev1SyslogArrayInput
	// A set of custom VCL configuration blocks. The
	// ability to upload custom VCL code is not enabled by default for new Fastly
	// accounts (see the [Fastly documentation](https://docs.fastly.com/guides/vcl/uploading-custom-vcl) for details).
	Vcls Servicev1VclArrayInput
	// Description field for the version.
	VersionComment pulumi.StringPtrInput
}

func (Servicev1State) ElementType() reflect.Type {
	return reflect.TypeOf((*servicev1State)(nil)).Elem()
}

type servicev1Args struct {
	// A set of ACL configuration blocks.  Defined below.
	Acls []Servicev1Acl `pulumi:"acls"`
	// Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.
	Activate *bool `pulumi:"activate"`
	// A set of Backends to service requests from your Domains.
	// Defined below. Backends must be defined in this argument, or defined in the
	// `vcl` argument below
	Backends []Servicev1Backend `pulumi:"backends"`
	// A BigQuery endpoint to send streaming logs too.
	// Defined below.
	Bigqueryloggings []Servicev1Bigquerylogging `pulumi:"bigqueryloggings"`
	// An Azure Blob Storage endpoint to send streaming logs too.
	// Defined below.
	Blobstorageloggings []Servicev1Blobstoragelogging `pulumi:"blobstorageloggings"`
	// A set of Cache Settings, allowing you to override
	CacheSettings []Servicev1CacheSetting `pulumi:"cacheSettings"`
	// An optional comment about the Director.
	Comment *string `pulumi:"comment"`
	// A set of conditions to add logic to any basic
	// configuration object in this service. Defined below.
	Conditions []Servicev1Condition `pulumi:"conditions"`
	// Sets the host header.
	DefaultHost *string `pulumi:"defaultHost"`
	// The default Time-to-live (TTL) for
	// requests.
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A set of dictionaries that allow the storing of key values pair for use within VCL functions. Defined below.
	Dictionaries []Servicev1Dictionary `pulumi:"dictionaries"`
	// A director to allow more control over balancing traffic over backends.
	// when an item is not to be cached based on an above `condition`. Defined below
	Directors []Servicev1Director `pulumi:"directors"`
	// If you created the S3 bucket outside of `us-east-1`,
	// then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`.
	Domains []Servicev1Domain `pulumi:"domains"`
	// A set of custom, "dynamic" VCL Snippet configuration blocks.  Defined below.
	Dynamicsnippets []Servicev1Dynamicsnippet `pulumi:"dynamicsnippets"`
	// Services that are active cannot be destroyed. In
	// order to destroy the Service, set `forceDestroy` to `true`. Default `false`.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// A gcs endpoint to send streaming logs too.
	// Defined below.
	Gcsloggings []Servicev1Gcslogging `pulumi:"gcsloggings"`
	// A set of gzip rules to control automatic gzipping of
	// content. Defined below.
	Gzips []Servicev1Gzip `pulumi:"gzips"`
	// A set of Headers to manipulate for each request. Defined
	// below.
	Headers []Servicev1Header `pulumi:"headers"`
	// Name of a defined `healthcheck` to assign to this backend.
	Healthchecks []Servicev1Healthcheck `pulumi:"healthchecks"`
	// An HTTPS endpoint to send streaming logs to.
	// Defined below.
	Httpsloggings []Servicev1Httpslogging `pulumi:"httpsloggings"`
	// A logentries endpoint to send streaming logs too.
	// Defined below.
	Logentries []Servicev1Logentry `pulumi:"logentries"`
	// A unique name to identify this dictionary.
	Name *string `pulumi:"name"`
	// A Papertrail endpoint to send streaming logs too.
	// Defined below.
	Papertrails []Servicev1Papertrail `pulumi:"papertrails"`
	// A set of Request modifiers. Defined below
	RequestSettings []Servicev1RequestSetting `pulumi:"requestSettings"`
	// Allows you to create synthetic responses that exist entirely on the varnish machine. Useful for creating error or maintenance pages that exists outside the scope of your datacenter. Best when used with Condition objects.
	ResponseObjects []Servicev1ResponseObject `pulumi:"responseObjects"`
	// A set of S3 Buckets to send streaming logs too.
	// Defined below.
	S3loggings []Servicev1S3logging `pulumi:"s3loggings"`
	// A set of custom, "regular" (non-dynamic) VCL Snippet configuration blocks.  Defined below.
	Snippets []Servicev1Snippet `pulumi:"snippets"`
	// A Splunk endpoint to send streaming logs too.
	// Defined below.
	Splunks []Servicev1Splunk `pulumi:"splunks"`
	// A Sumologic endpoint to send streaming logs too.
	// Defined below.
	Sumologics []Servicev1Sumologic `pulumi:"sumologics"`
	// A syslog endpoint to send streaming logs too.
	// Defined below.
	Syslogs []Servicev1Syslog `pulumi:"syslogs"`
	// A set of custom VCL configuration blocks. The
	// ability to upload custom VCL code is not enabled by default for new Fastly
	// accounts (see the [Fastly documentation](https://docs.fastly.com/guides/vcl/uploading-custom-vcl) for details).
	Vcls []Servicev1Vcl `pulumi:"vcls"`
	// Description field for the version.
	VersionComment *string `pulumi:"versionComment"`
}

// The set of arguments for constructing a Servicev1 resource.
type Servicev1Args struct {
	// A set of ACL configuration blocks.  Defined below.
	Acls Servicev1AclArrayInput
	// Conditionally prevents the Service from being activated. The apply step will continue to create a new draft version but will not activate it if this is set to false. Default true.
	Activate pulumi.BoolPtrInput
	// A set of Backends to service requests from your Domains.
	// Defined below. Backends must be defined in this argument, or defined in the
	// `vcl` argument below
	Backends Servicev1BackendArrayInput
	// A BigQuery endpoint to send streaming logs too.
	// Defined below.
	Bigqueryloggings Servicev1BigqueryloggingArrayInput
	// An Azure Blob Storage endpoint to send streaming logs too.
	// Defined below.
	Blobstorageloggings Servicev1BlobstorageloggingArrayInput
	// A set of Cache Settings, allowing you to override
	CacheSettings Servicev1CacheSettingArrayInput
	// An optional comment about the Director.
	Comment pulumi.StringPtrInput
	// A set of conditions to add logic to any basic
	// configuration object in this service. Defined below.
	Conditions Servicev1ConditionArrayInput
	// Sets the host header.
	DefaultHost pulumi.StringPtrInput
	// The default Time-to-live (TTL) for
	// requests.
	DefaultTtl pulumi.IntPtrInput
	// A set of dictionaries that allow the storing of key values pair for use within VCL functions. Defined below.
	Dictionaries Servicev1DictionaryArrayInput
	// A director to allow more control over balancing traffic over backends.
	// when an item is not to be cached based on an above `condition`. Defined below
	Directors Servicev1DirectorArrayInput
	// If you created the S3 bucket outside of `us-east-1`,
	// then specify the corresponding bucket endpoint. Example: `s3-us-west-2.amazonaws.com`.
	Domains Servicev1DomainArrayInput
	// A set of custom, "dynamic" VCL Snippet configuration blocks.  Defined below.
	Dynamicsnippets Servicev1DynamicsnippetArrayInput
	// Services that are active cannot be destroyed. In
	// order to destroy the Service, set `forceDestroy` to `true`. Default `false`.
	ForceDestroy pulumi.BoolPtrInput
	// A gcs endpoint to send streaming logs too.
	// Defined below.
	Gcsloggings Servicev1GcsloggingArrayInput
	// A set of gzip rules to control automatic gzipping of
	// content. Defined below.
	Gzips Servicev1GzipArrayInput
	// A set of Headers to manipulate for each request. Defined
	// below.
	Headers Servicev1HeaderArrayInput
	// Name of a defined `healthcheck` to assign to this backend.
	Healthchecks Servicev1HealthcheckArrayInput
	// An HTTPS endpoint to send streaming logs to.
	// Defined below.
	Httpsloggings Servicev1HttpsloggingArrayInput
	// A logentries endpoint to send streaming logs too.
	// Defined below.
	Logentries Servicev1LogentryArrayInput
	// A unique name to identify this dictionary.
	Name pulumi.StringPtrInput
	// A Papertrail endpoint to send streaming logs too.
	// Defined below.
	Papertrails Servicev1PapertrailArrayInput
	// A set of Request modifiers. Defined below
	RequestSettings Servicev1RequestSettingArrayInput
	// Allows you to create synthetic responses that exist entirely on the varnish machine. Useful for creating error or maintenance pages that exists outside the scope of your datacenter. Best when used with Condition objects.
	ResponseObjects Servicev1ResponseObjectArrayInput
	// A set of S3 Buckets to send streaming logs too.
	// Defined below.
	S3loggings Servicev1S3loggingArrayInput
	// A set of custom, "regular" (non-dynamic) VCL Snippet configuration blocks.  Defined below.
	Snippets Servicev1SnippetArrayInput
	// A Splunk endpoint to send streaming logs too.
	// Defined below.
	Splunks Servicev1SplunkArrayInput
	// A Sumologic endpoint to send streaming logs too.
	// Defined below.
	Sumologics Servicev1SumologicArrayInput
	// A syslog endpoint to send streaming logs too.
	// Defined below.
	Syslogs Servicev1SyslogArrayInput
	// A set of custom VCL configuration blocks. The
	// ability to upload custom VCL code is not enabled by default for new Fastly
	// accounts (see the [Fastly documentation](https://docs.fastly.com/guides/vcl/uploading-custom-vcl) for details).
	Vcls Servicev1VclArrayInput
	// Description field for the version.
	VersionComment pulumi.StringPtrInput
}

func (Servicev1Args) ElementType() reflect.Type {
	return reflect.TypeOf((*servicev1Args)(nil)).Elem()
}
